{"version":3,"sources":["components/AddTodo/AddTodo.styles.js","components/AddTodo/AddTodo.js","components/TodoItem/TodoItem.styles.js","components/TodoItem/TodoItem.js","redux/actions.js","containers/Main/Main.style.js","containers/Main/Main.js","redux/reducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["styles","inputField","border","width","margin","borderRadius","boxShadow","marginBottom","height","submitButton","color","backgroundColor","fontWeight","cursor","AddTodo","addTodo","useState","todo","setTodo","style","placeholder","onChange","e","target","value","type","onClick","taskContainer","justifyContent","display","taskWrapper","textAlign","alignSelf","task","textDEcoration","paddingLeft","fontSize","iconsWrapper","paddingTop","completedIcon","deleteIcon","paddingRight","TodoItem","deleteTodo","completeTodo","console","log","textDecoration","completed","text","className","ADD_TASK","DELETE_TASK","COMPLETE_TASK","appContainer","alignItems","container","padding","title","inputWrapper","separator","Main","props","this","taskItems","length","map","Component","connect","state","dispatch","payload","addTask","deleteTask","completeTask","initialData","taskReducer","action","filter","updatedTaskItems","forEach","push","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","App","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.406fb333.chunk.js","sourcesContent":["const styles = {\n    inputField: {\n        border: 'none',\n        width: '72%',\n        margin: '1rem',\n        borderRadius: 4,\n        boxShadow: '0 10px 15px rgba(0,0,0,0.2)',\n        marginBottom: 20,\n        height: 50,\n\n    },\n    submitButton: {\n        borderRadius: 4,\n        height: 50,\n        width: 57,\n        color: 'white',\n        border: 'none',\n        backgroundColor: 'darkgreen',\n        boxShadow: '0 10px 15px rgba(0,0,0,0.2)',\n        fontWeight: 'bold',\n        cursor: 'pointer'\n    }\n}\n\nexport default styles","import React, { useState } from 'react'\nimport styles from './AddTodo.styles'\n\nexport default function AddTodo({ addTodo }) {\n    const [todo, setTodo] = useState('')\n    return (\n        <div>\n            <input \n                style={styles.inputField}\n                placeholder=\"Enter Todo\"\n                onChange={(e) => setTodo(e.target.value)}\n                value={todo} />\n            <button \n                style={styles.submitButton}\n                type=\"submit\"\n                onClick={() => { \n                    addTodo(todo)\n                    setTodo('')\n                }}\n            >Add\n            </button>\n        </div>\n    )\n}\n","let styles= {\n    taskContainer: {\n        justifyContent: 'center',\n        display: 'flex',\n    },\n    taskWrapper: {\n        marginBottom: 12,\n        width: '80%',\n        textAlign: 'center',\n        alignSelf: 'center',\n        borderRadius: 4,\n        display: 'flex',\n        justifyContent: 'space-between',\n        boxShadow: '0 10px 15px rgba(0,0,0,0.2)',\n        backgroundColor: 'lightgrey',\n    },\n    task: {\n        textAlign: 'right',\n        textDEcoration: 'none',\n        paddingLeft: 20,\n        fontSize: 20,\n    },\n    iconsWrapper: {\n        paddingTop: 20,\n    },\n    completedIcon: {\n        fontSize: 20,\n        color: 'springgreen',\n        cursor: 'pointer',\n    },\n    deleteIcon: {\n        fontSize: 20,\n        paddingLeft: 10,\n        paddingRight: 20,\n        color: 'red',\n        cursor: 'pointer',\n    }\n}\n\nexport default styles","import React from 'react'\nimport styles from './TodoItem.styles'\n\n\nexport default function TodoItem({ task, deleteTodo, completeTodo }) {\n    console.log(task, 'deleteTodo fdo')\n    return (\n        <div style={styles.taskContainer}>\n            {task && \n                <div style={styles.taskWrapper} >                \n                    <p\n                        style={{\n                            ...styles.task, \n                            textDecoration: task.completed ? 'line-through': 'none'\n                        }}>\n                        {task?.text}\n                    </p>\n                    <div style={styles.iconsWrapper}>\n                        <i \n                            className=\"fas fa-check-circle\"\n                            style={styles.completedIcon}\n                            onClick={() => completeTodo(task)}></i>\n                        <i \n                            className=\"fas fa-trash-alt\"\n                            style={styles.deleteIcon}\n                            onClick={() => deleteTodo(task)}></i>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n","export const ADD_TASK = \"ADD_TASK\"\nexport const DELETE_TASK = \"DELETE_TASK\"\nexport const COMPLETE_TASK = \"COMPLETE_TASK\"\n\nexport const addTask = (task) => ({\n    type: ADD_TASK,\n    payload: task,\n})\n\nexport const deleteTask = (task) => ({\n    type: DELETE_TASK,\n    payload: task,\n})\n\nexport const completeTask = (task) => ({\n    type: COMPLETE_TASK,\n    payload: task,\n})","const styles = {\n    appContainer: {\n        justifyContent: 'center',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: '#fafafa',\n        height: '100vh',\n    },\n    container: {\n        borderRadius: 15,\n        width: '48%',\n        backgroundColor: 'pink',\n        textAlign: 'center',\n        justifyContent: 'center',\n        padding: 30,\n        boxShadow: '0 10px 15px rgba(0,0,0,0.7)',\n    },\n    title: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    inputWrapper: {\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    separator: {\n        color: 'black',\n        height: '0.01mm',\n        width: '78%',\n        marginBottom: 17,\n    }\n}\n\nexport default styles","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport AddTodo from '../../components/AddTodo/AddTodo'\nimport TodoItem from '../../components/TodoItem/TodoItem'\nimport { addTask, completeTask, deleteTask } from '../../redux/actions'\nimport styles from './Main.style'\n\nexport class Main extends Component {\n    render() {\n        return (\n            <div style={styles.appContainer}>\n                <div style={styles.container}>\n                    <h1 style={styles.title}>To do List</h1>\n                    <div style={styles.inputWrapper}>\n                        <AddTodo \n                            addTodo={(task) => this.props.addTodo(task)} \n                        />\n                        <hr style={styles.separator}/>\n                    </div>\n                    <TodoItem />\n                    {this.props.taskItems.length > 0 && this.props.taskItems.map((task) => {\n                        console.log(this.props.taskItems, 'this.props.taskItems fdo')\n                            return  (\n                                <TodoItem\n                                key={task.text}\n                                task={task}         \n                                deleteTodo={(task) => this.props.deleteTodo(task)} \n                                completeTodo={(task) => this.props.completeTodo(task)} />\n                            )\n                        }\n                    )}\n                </div>\n            </div>\n        )\n    } \n}\n\nconst mapStateToProps = (state) => ({\n    taskItems: state.taskItems\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    addTodo: (task) => dispatch(addTask(task)),\n    deleteTodo: (task) => dispatch(deleteTask(task)),\n    completeTodo: (task) => dispatch(completeTask(task))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)\n","import { ADD_TASK, COMPLETE_TASK, DELETE_TASK } from \"./actions\"\n\nconst initialData ={\n    taskItems: []\n}\n\nconst taskReducer = (state = initialData, action) => {\n    switch(action.type) {\n        case ADD_TASK:\n            return {\n                ...state, \n                taskItems: [\n                    ...state.taskItems,\n                    {\n                        text: action.payload, \n                        completed: false,\n                    }\n                ]\n            }\n        case DELETE_TASK:\n            return {\n                ...state, \n                taskItems: [...state.taskItems.filter((task) => task.text !== action.payload.text)]\n            }   \n        case COMPLETE_TASK:\n            let updatedTaskItems = []\n            state.taskItems.forEach((task) => {\n                if (task.text === action.payload.text) {\n                    task.completed = task.completed === true ? false : true\n                }\n                updatedTaskItems.push(task)\n            })\n            return {\n                ...state, \n                taskItems: updatedTaskItems\n            }                     \n        default:\n            return state\n    }\n}\n\nexport default taskReducer","import { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport rootReducer from './reducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport let store = createStore(persistedReducer)\nexport let persistor = persistStore(store)\n","\nimport React, { Component } from 'react';\nimport Main from './containers/Main/Main';\nimport { Provider } from 'react-redux';\nimport { persistor, store } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nexport default class App extends Component {\n  render() {\n    return (    \n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Main />\n        </PersistGate>\n      </Provider> );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}